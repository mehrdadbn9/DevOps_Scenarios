# First stage: Install dependencies and build the application
FROM node:14 AS builder

# set a working directory
WORKDIR /usr/src/app

# set maintainer
LABEL maintainer="mehrdad"
LABEL description="Dockerfile for a Node.js application, created for the first Jenkins project."

# copy package.json and package-lock.json
COPY package*.json ./

# install all dependencies
RUN npm install

# copy the source code
COPY src/ ./src/

# build the application
RUN npm run build

# Second stage: Copy only necessary files and run the application
FROM node:14-alpine

# set a working directory
WORKDIR /usr/src/app

# copy only the necessary files from the app stage
COPY --from=builder /usr/src/app/dist /usr/src/app/node_modules /usr/src/app/package.json ./

# remove any unnecessary files
RUN rm -rf /usr/src/app/docs

# set environment variables
ENV PORT=8000

# create a non-root user with limited privileges
RUN addgroup -S app && adduser -S app -G app
USER app

# tell docker what port to expose
EXPOSE $PORT/tcp

# run the application
CMD ["npm", "start"]


# set a health check
HEALTHCHECK --interval=30s \
            --timeout=10s \
            --start-period=60s \
            --retries=3 \
            CMD curl -f http://127.0.0.1:8000 || exit 1
